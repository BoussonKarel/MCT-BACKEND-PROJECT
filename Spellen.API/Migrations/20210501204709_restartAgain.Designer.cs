// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spellen.API.Data;

namespace Spellen.API.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20210501204709_restartAgain")]
    partial class restartAgain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Spellen.API.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("f03502ed-f8c6-45d4-a283-62cd9a36865a"),
                            Name = "Pleinspelen"
                        },
                        new
                        {
                            CategoryId = new Guid("2d261a66-3fa0-4c5b-91fb-7ff75999733b"),
                            Name = "Verstoppen"
                        },
                        new
                        {
                            CategoryId = new Guid("cc78fbbb-a46b-437e-8978-ae20d9243a29"),
                            Name = "Tikken / Tikkertje"
                        });
                });

            modelBuilder.Entity("Spellen.API.Models.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeFrom")
                        .HasColumnType("int");

                    b.Property<int>("AgeTo")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayersMax")
                        .HasColumnType("int");

                    b.Property<int>("PlayersMin")
                        .HasColumnType("int");

                    b.Property<string>("Terrain")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Spellen.API.Models.GameCategory", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoryId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("GameCategories");
                });

            modelBuilder.Entity("Spellen.API.Models.GameItem", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ItemId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("GameItems");
                });

            modelBuilder.Entity("Spellen.API.Models.GameVariCombi", b =>
                {
                    b.Property<Guid>("VariCombiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VariCombiId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("GameVariCombis");
                });

            modelBuilder.Entity("Spellen.API.Models.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = new Guid("1f816b47-d874-4458-8acb-02812c8c4366"),
                            Name = "Potjes"
                        },
                        new
                        {
                            ItemId = new Guid("dacd3f2e-302b-4211-99a3-5de850821102"),
                            Name = "Kommel / Touw"
                        });
                });

            modelBuilder.Entity("Spellen.API.Models.VariCombi", b =>
                {
                    b.Property<Guid>("VariCombiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VariCombiId");

                    b.ToTable("VariCombis");
                });

            modelBuilder.Entity("Spellen.API.Models.GameCategory", b =>
                {
                    b.HasOne("Spellen.API.Models.Category", "Category")
                        .WithMany("GameCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spellen.API.Models.Game", null)
                        .WithMany("GameCategories")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Spellen.API.Models.GameItem", b =>
                {
                    b.HasOne("Spellen.API.Models.Game", null)
                        .WithMany("GameItems")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spellen.API.Models.Item", "Item")
                        .WithMany("GameItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Spellen.API.Models.GameVariCombi", b =>
                {
                    b.HasOne("Spellen.API.Models.Game", null)
                        .WithMany("GameVaricombis")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spellen.API.Models.VariCombi", "VariCombi")
                        .WithMany("GameVariCombis")
                        .HasForeignKey("VariCombiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VariCombi");
                });

            modelBuilder.Entity("Spellen.API.Models.Category", b =>
                {
                    b.Navigation("GameCategories");
                });

            modelBuilder.Entity("Spellen.API.Models.Game", b =>
                {
                    b.Navigation("GameCategories");

                    b.Navigation("GameItems");

                    b.Navigation("GameVaricombis");
                });

            modelBuilder.Entity("Spellen.API.Models.Item", b =>
                {
                    b.Navigation("GameItems");
                });

            modelBuilder.Entity("Spellen.API.Models.VariCombi", b =>
                {
                    b.Navigation("GameVariCombis");
                });
#pragma warning restore 612, 618
        }
    }
}
